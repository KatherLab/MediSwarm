# Use the specified PyTorch image as the base
ARG PYTORCH_IMAGE=pytorch/pytorch:2.2.0-cuda12.1-cudnn8-runtime
FROM ${PYTORCH_IMAGE}

# Specify the NVFlare version
ARG NVF_VERSION=2.4.1
ENV NVF_BRANCH=${NVF_VERSION}

# Set the Python version
ENV PYTHON_VERSION=3.10.14

# Install updates of installed packages
RUN apt update

RUN apt install -y apt=2.4.13 apt-utils=2.4.13 libapt-pkg6.0=2.4.13

# Update versions of installed packages
RUN apt install -y base-files=12ubuntu4.7 bash=5.1-6ubuntu1.1 bsdutils=1:2.37.2-4ubuntu3.4 ca-certificates=20240203~22.04.1 coreutils=8.32-4.1ubuntu1.2 dpkg=1.21.1ubuntu2.3 e2fsprogs=1.46.5-2ubuntu1.2 gpgv=2.2.27-3ubuntu2.3 libblkid1=2.37.2-4ubuntu3.4 libc-bin=2.35-0ubuntu3.9 libc-dev-bin=2.35-0ubuntu3.9 libc6-dev=2.35-0ubuntu3.9 libc6=2.35-0ubuntu3.9 libcap2=1:2.44-1ubuntu0.22.04.2 libcom-err2=1.46.5-2ubuntu1.2 libext2fs2=1.46.5-2ubuntu1.2 libgnutls30=3.7.3-4ubuntu1.6 libgssapi-krb5-2=1.19.2-2ubuntu0.6 libk5crypto3=1.19.2-2ubuntu0.6 libkrb5-3=1.19.2-2ubuntu0.6 libkrb5support0=1.19.2-2ubuntu0.6 libmount1=2.37.2-4ubuntu3.4 libpam-modules-bin=1.4.0-11ubuntu2.5 libpam-modules=1.4.0-11ubuntu2.5 libpam-runtime=1.4.0-11ubuntu2.5 libpam0g=1.4.0-11ubuntu2.5 libseccomp2=2.5.3-2ubuntu3~22.04.1 libsmartcols1=2.37.2-4ubuntu3.4 libss2=1.46.5-2ubuntu1.2 libssl3=3.0.2-0ubuntu1.19 libsystemd0=249.11-0ubuntu3.15 libtasn1-6=4.18.0-4ubuntu0.1 libudev1=249.11-0ubuntu3.15 libuuid1=2.37.2-4ubuntu3.4 linux-libc-dev=5.15.0-140.150 login=1:4.8.1-2ubuntu2.2 logsave=1.46.5-2ubuntu1.2 mount=2.37.2-4ubuntu3.4 openssl=3.0.2-0ubuntu1.19 passwd=1:4.8.1-2ubuntu2.2 util-linux=2.37.2-4ubuntu3.4

# Install zip and dependencies at defined versions
RUN apt install -y unzip=6.0-26ubuntu3.2 zip=3.0-12build2

# Clean up apt cache
RUN apt clean
RUN rm -rf /var/lib/apt/lists/*

# uninstall conda to prevent usage and avoid and potential repository license issues
RUN python3 -m pip uninstall -y conda conda-package-handling conda_index

# Install specific versions of pip and setuptools
RUN python3 -m pip install -U pip==23.3.1 setuptools==75.8.2

# Install dependencies of NVFlare at fixed versions
RUN python3 -m pip install --upgrade psutil==7.0.0
RUN python3 -m pip install Flask==3.0.2 Flask-JWT-Extended==4.6.0 Flask-SQLAlchemy==3.1.1 PyJWT==2.10.1 SQLAlchemy==2.0.16 Werkzeug==3.0.1 blinker==1.9.0 docker==7.1.0 greenlet==3.1.1 grpcio==1.62.1 gunicorn==23.0.0 itsdangerous==2.2.0 msgpack==1.1.0 protobuf==4.24.4 pyhocon==0.3.61 pyparsing==3.0.9 websockets==15.0

# Install additional Python packages for swarm training at defined versions
RUN python3 -m pip install Deprecated==1.2.14 SimpleITK==2.2.1 absl-py==2.1.0 aiohttp==3.9.5 aiosignal==1.3.1 async-timeout==4.0.3 cachetools==5.3.3 contourpy==1.2.1 cycler==0.12.1 et-xmlfile==1.1.0 fonttools==4.53.1 frozenlist==1.4.1 google-auth-oauthlib==1.0.0 google-auth==2.31.0 huggingface_hub==0.23.4 humanize==4.9.0 joblib==1.4.2 kiwisolver==1.4.5 lightning-utilities==0.11.3.post0 markdown-it-py==3.0.0 markdown==3.6 matplotlib==3.7.2 mdurl==0.1.2 monai==1.3.0 multidict==6.0.5 nibabel==5.2.1 oauthlib==3.2.2 openpyxl==3.1.0 pandas==2.2.2 pyasn1-modules==0.4.0 pyasn1==0.6.0 pydicom==2.4.4 python-dateutil==2.9.0.post0 pytorch-lightning==1.9.0 requests-oauthlib==2.0.0 rich==13.7.1 rsa==4.9 safetensors==0.4.3 scikit-learn==1.3.0 scipy==1.14.0 seaborn==0.12.2 shellingham==1.5.4 tensorboard-data-server==0.7.2 tensorboard-plugin-wit==1.8.1 tensorboard==2.12.1 threadpoolctl==3.5.0 timm==0.9.16 torchio==0.19.6 torchmetrics==1.4.0.post0 torchvision==0.17.0 tqdm==4.65.0 typer==0.12.3 tzdata==2024.1 wrapt==1.16.0 yarl==1.9.4

# Install packages needed for testing and for listing licenses of installed packages
RUN python3 -m pip install coverage==7.5.4 mock==5.1.0
RUN python3 -m pip install pip-licenses==5.0.0 prettytable==3.14.0

# Clean up pip cache
RUN python3 -m pip cache purge

# install ODELIA fork of NVFlare from local source
WORKDIR /workspace/
COPY ./docker_config/NVFlare /workspace/nvflare
## use startup kit template in the dashboard
COPY ./docker_config/master_template.yml /workspace/nvflare/nvflare/lighter/impl/
RUN python3 -m pip install /workspace/nvflare
RUN rm -rf /workspace/nvflare

# Install the ODELIA controller package from local source
COPY ./controller /workspace/controller
RUN python3 -m pip install /workspace/controller
RUN rm -rf /workspace/controller

# Copy the source code for local training and deploying to the swarm
COPY . /MediSwarm
RUN mkdir -p /fl_admin/transfer
RUN ln -s /MediSwarm /fl_admin/transfer/MediSwarm
