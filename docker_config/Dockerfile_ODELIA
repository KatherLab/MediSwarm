# Use the specified PyTorch image as the base
ARG PYTORCH_IMAGE=pytorch/pytorch:2.2.0-cuda12.1-cudnn8-runtime
FROM ${PYTORCH_IMAGE}

# Specify the NVFlare version
ARG NVF_VERSION=2.4.1
ENV NVF_BRANCH=${NVF_VERSION}

# Set the Python version
ENV PYTHON_VERSION=3.10.14

# Install updates of installed packages
RUN apt update

RUN apt install -y apt=2.4.13 apt-utils=2.4.13 libapt-pkg6.0=2.4.13

# Update versions of installed packages
RUN apt install -y base-files=12ubuntu4.7 bash=5.1-6ubuntu1.1 bsdutils=1:2.37.2-4ubuntu3.4 ca-certificates=20240203~22.04.1 coreutils=8.32-4.1ubuntu1.2 dpkg=1.21.1ubuntu2.3 e2fsprogs=1.46.5-2ubuntu1.2 gpgv=2.2.27-3ubuntu2.3 libblkid1=2.37.2-4ubuntu3.4 libc-bin=2.35-0ubuntu3.9 libc-dev-bin=2.35-0ubuntu3.9 libc6-dev=2.35-0ubuntu3.9 libc6=2.35-0ubuntu3.9 libcap2=1:2.44-1ubuntu0.22.04.2 libcom-err2=1.46.5-2ubuntu1.2 libext2fs2=1.46.5-2ubuntu1.2 libgnutls30=3.7.3-4ubuntu1.6 libgssapi-krb5-2=1.19.2-2ubuntu0.6 libk5crypto3=1.19.2-2ubuntu0.6 libkrb5-3=1.19.2-2ubuntu0.6 libkrb5support0=1.19.2-2ubuntu0.6 libmount1=2.37.2-4ubuntu3.4 libpam-modules-bin=1.4.0-11ubuntu2.5 libpam-modules=1.4.0-11ubuntu2.5 libpam-runtime=1.4.0-11ubuntu2.5 libpam0g=1.4.0-11ubuntu2.5 libseccomp2=2.5.3-2ubuntu3~22.04.1 libsmartcols1=2.37.2-4ubuntu3.4 libss2=1.46.5-2ubuntu1.2 libssl3=3.0.2-0ubuntu1.19 libsystemd0=249.11-0ubuntu3.15 libtasn1-6=4.18.0-4ubuntu0.1 libudev1=249.11-0ubuntu3.15 libuuid1=2.37.2-4ubuntu3.4 linux-libc-dev=5.15.0-136.147 login=1:4.8.1-2ubuntu2.2 logsave=1.46.5-2ubuntu1.2 mount=2.37.2-4ubuntu3.4 openssl=3.0.2-0ubuntu1.19 passwd=1:4.8.1-2ubuntu2.2 util-linux=2.37.2-4ubuntu3.4

# Install apt-transport-https curl gnupg lsb-release zip and dependencies at defined versions
RUN apt install -y apt-transport-https=2.4.13 curl=7.81.0-1ubuntu1.20 dirmngr=2.2.27-3ubuntu2.3 distro-info-data=0.52ubuntu0.8 gnupg-l10n=2.2.27-3ubuntu2.3 gnupg-utils=2.2.27-3ubuntu2.3 gnupg=2.2.27-3ubuntu2.3 gpg-agent=2.2.27-3ubuntu2.3 gpg-wks-client=2.2.27-3ubuntu2.3 gpg-wks-server=2.2.27-3ubuntu2.3 gpg=2.2.27-3ubuntu2.3 gpgconf=2.2.27-3ubuntu2.3 gpgsm=2.2.27-3ubuntu2.3 libassuan0=2.5.5-1build1 libbrotli1=1.0.9-2build6 libcurl4=7.81.0-1ubuntu1.20 libexpat1=2.4.7-1ubuntu0.6 libksba8=1.6.0-2ubuntu0.2 libldap-2.5-0=2.5.18+dfsg-0ubuntu0.22.04.3 libldap-common=2.5.18+dfsg-0ubuntu0.22.04.3 libmpdec3=2.5.1-2build2 libnghttp2-14=1.43.0-1ubuntu0.2 libnpth0=1.6-3build2 libpsl5=0.21.0-1.2build2 libpython3-stdlib=3.10.6-1~22.04.1 libpython3.10-minimal=3.10.12-1~22.04.9 libpython3.10-stdlib=3.10.12-1~22.04.9 libreadline8=8.1.2-1 librtmp1=2.4+20151223.gitfa8646d.1-2build4 libsasl2-2=2.1.27+dfsg2-3ubuntu1.2 libsasl2-modules-db=2.1.27+dfsg2-3ubuntu1.2 libsasl2-modules=2.1.27+dfsg2-3ubuntu1.2 libsqlite3-0=3.37.2-2ubuntu0.3 libssh-4=0.9.6-2ubuntu0.22.04.3 lsb-release=11.1.0ubuntu4 media-types=7.0.0 pinentry-curses=1.1.1-1build2 publicsuffix=20211207.1025-1 python3-minimal=3.10.6-1~22.04.1 python3.10-minimal=3.10.12-1~22.04.9 python3.10=3.10.12-1~22.04.9 python3=3.10.6-1~22.04.1 readline-common=8.1.2-1 unzip=6.0-26ubuntu3.2 zip=3.0-12build2


# Prepare Docker installation
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc \
    && chmod a+r /etc/apt/keyrings/docker.asc \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
    && apt update

# Install docker-ce docker-ce-cli containerd.io and dependencies at fixed versions
RUN apt install -y apparmor=3.0.4-2ubuntu2.4 containerd.io=1.7.27-1 dbus-user-session=1.12.20-2ubuntu4.1 dbus=1.12.20-2ubuntu4.1 dmsetup=2:1.02.175-2.1ubuntu5 docker-buildx-plugin=0.22.0-1~ubuntu.22.04~jammy docker-ce-cli=5:28.0.4-1~ubuntu.22.04~jammy docker-ce-rootless-extras=5:28.0.4-1~ubuntu.22.04~jammy docker-ce=5:28.0.4-1~ubuntu.22.04~jammy docker-compose-plugin=2.34.0-1~ubuntu.22.04~jammy gir1.2-glib-2.0=1.72.0-1 git-man=1:2.34.1-1ubuntu1.12 git=1:2.34.1-1ubuntu1.12 iptables=1.8.7-1ubuntu5.2 less=590-1ubuntu0.22.04.3 libapparmor1=3.0.4-2ubuntu2.4 libargon2-1=0~20171227-0.3 libbsd0=0.11.5-1 libcbor0.8=0.8.0-2ubuntu1 libcryptsetup12=2:2.4.3-1ubuntu1.3 libcurl3-gnutls=7.81.0-1ubuntu1.20 libdbus-1-3=1.12.20-2ubuntu4.1 libdevmapper1.02.1=2:1.02.175-2.1ubuntu5 libedit2=3.1-20210910-1build1 liberror-perl=0.17029-1 libfido2-1=1.10.0-1 libgdbm-compat4=1.23-1 libgdbm6=1.23-1 libgirepository-1.0-1=1.72.0-1 libglib2.0-0=2.72.4-0ubuntu2.4 libglib2.0-data=2.72.4-0ubuntu2.4 libicu70=70.1-2 libip4tc2=1.8.7-1ubuntu5.2 libip6tc2=1.8.7-1ubuntu5.2 libjson-c5=0.15-3~ubuntu1.22.04.2 libkmod2=29-1ubuntu1 libltdl7=2.4.6-15build2 libmd0=1.0.4-1build1 libmnl0=1.0.4-3build2 libnetfilter-conntrack3=1.0.9-1 libnfnetlink0=1.0.1-3build3 libnftnl11=1.2.1-1build1 libnss-systemd=249.11-0ubuntu3.15 libpam-systemd=249.11-0ubuntu3.15 libperl5.34=5.34.0-3ubuntu1.3 libslirp0=4.6.1-1build1 libx11-6=2:1.7.5-1ubuntu0.3 libx11-data=2:1.7.5-1ubuntu0.3 libxau6=1:1.0.9-1build5 libxcb1=1.14-3ubuntu3 libxdmcp6=1:1.1.3-0ubuntu5 libxext6=2:1.3.4-1build1 libxml2=2.9.13+dfsg-1ubuntu0.6 libxmuu1=2:1.1.3-3 libxtables12=1.8.7-1ubuntu5.2 netbase=6.3 networkd-dispatcher=2.1-2ubuntu0.22.04.2 openssh-client=1:8.9p1-3ubuntu0.11 patch=2.7.6-7build2 perl-modules-5.34=5.34.0-3ubuntu1.3 perl=5.34.0-3ubuntu1.3 pigz=2.6-1 python3-dbus=1.2.18-3build1 python3-gi=3.42.1-0ubuntu1 shared-mime-info=2.1-2 slirp4netns=1.0.1-2 systemd-sysv=249.11-0ubuntu3.15 systemd-timesyncd=249.11-0ubuntu3.15 systemd=249.11-0ubuntu3.15 xauth=1:1.1-1build2 xdg-user-dirs=0.17-2ubuntu4 xz-utils=5.2.5-2ubuntu1

# Clean up apt cache
RUN rm -rf /var/lib/apt/lists/*

# uninstall conda to prevent usage and avoid and potential repository license issues
RUN python3 -m pip uninstall -y conda conda-package-handling conda_index

# Install specific versions of pip and setuptools
RUN python3 -m pip install -U pip==23.3.1 setuptools==75.8.2

# Install dependencies of NVFlare at fixed versions
RUN python3 -m pip install --upgrade psutil==7.0.0
RUN python3 -m pip install Flask==3.0.2 Flask-JWT-Extended==4.6.0 Flask-SQLAlchemy==3.1.1 PyJWT==2.10.1 SQLAlchemy==2.0.16 Werkzeug==3.0.1 blinker==1.9.0 docker==7.1.0 greenlet==3.1.1 grpcio==1.62.1 gunicorn==23.0.0 itsdangerous==2.2.0 msgpack==1.1.0 protobuf==4.24.4 pyhocon==0.3.61 pyparsing==3.0.9 websockets==15.0

# Install additional Python packages for swarm training at defined versions
RUN python3 -m pip install Deprecated==1.2.14 SimpleITK==2.2.1 absl-py==2.1.0 aiohttp==3.9.5 aiosignal==1.3.1 async-timeout==4.0.3 cachetools==5.3.3 contourpy==1.2.1 cycler==0.12.1 et-xmlfile==1.1.0 fonttools==4.53.1 frozenlist==1.4.1 google-auth-oauthlib==1.0.0 google-auth==2.31.0 huggingface_hub==0.23.4 humanize==4.9.0 joblib==1.4.2 kiwisolver==1.4.5 lightning-utilities==0.11.3.post0 markdown-it-py==3.0.0 markdown==3.6 matplotlib==3.7.2 mdurl==0.1.2 monai==1.3.0 multidict==6.0.5 nibabel==5.2.1 oauthlib==3.2.2 openpyxl==3.1.0 pandas==2.2.2 pyasn1-modules==0.4.0 pyasn1==0.6.0 pydicom==2.4.4 python-dateutil==2.9.0.post0 pytorch-lightning==1.9.0 requests-oauthlib==2.0.0 rich==13.7.1 rsa==4.9 safetensors==0.4.3 scikit-learn==1.3.0 scipy==1.14.0 seaborn==0.12.2 shellingham==1.5.4 tensorboard-data-server==0.7.2 tensorboard-plugin-wit==1.8.1 tensorboard==2.12.1 threadpoolctl==3.5.0 timm==0.9.16 torchio==0.19.6 torchmetrics==1.4.0.post0 torchvision==0.17.0 tqdm==4.65.0 typer==0.12.3 tzdata==2024.1 wrapt==1.16.0 yarl==1.9.4

# Install packages needed for testing and for listing licenses of installed packages
RUN python3 -m pip install coverage==7.5.4 mock==5.1.0
RUN python3 -m pip install pip-licenses==5.0.0 prettytable==3.14.0

# Clean up pip cache
RUN python3 -m pip cache purge

# install ODELIA fork of NVFlare from local source
WORKDIR /workspace/
COPY ./docker_config/NVFlare /workspace/nvflare
## use startup kit template in the dashboard
COPY ./docker_config/master_template.yml /workspace/nvflare/nvflare/lighter/impl/
RUN python3 -m pip install /workspace/nvflare
RUN rm -rf /workspace/nvflare

# Install the ODELIA controller package from local source
COPY ./controller /workspace/controller
RUN python3 -m pip install /workspace/controller
RUN rm -rf /workspace/controller

# Copy the source code for local training and deploying to the swarm
COPY . /MediSwarm
RUN mkdir -p /fl_admin/transfer
RUN ln -s /MediSwarm /fl_admin/transfer/MediSwarm
