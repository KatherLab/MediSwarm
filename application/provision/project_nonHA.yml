api_version: 3
name: ODELIA_ternary_classification_nonHA
description: >
  NVIDIA FLARE project YAML file for configuring a federated learning environment without High Availability (HA).
  focused on 3D convolutional neural networks (3D CNNs) using PyTorch Lightning (PTL).
  This configuration includes the one server, one admin, and three client settings, certificate handling,
  and Docker image specifications for seamless deployment and management of the
  federated learning system. 

participants:
  - name: dl3.tud.de
    type: server
    org: tud
    fed_learn_port: 8002
    admin_port: 8003
  - name: tud_dl3
    type: client
    org: tud
    # Specifying listening_host will enable the creation of one pair of
    # certificate/private key for this client, allowing the client to function
    # as a server for 3rd-party integration.
    # The value must be a hostname that the external trainer can reach via the network.
    # listening_host: site-1-lh
  - name: tud_dl0
    type: client
    org: tud
  - name: tud_dl2
    type: client
    org: tud
  - name: jiefu.zhu@tu-dresden.de
    type: admin
    org: tud
    role: project_admin

# The same methods in all builders are called in their order defined in builders section
builders:
  - path: nvflare.lighter.impl.workspace.WorkspaceBuilder
    args:
      template_file: master_template.yml
  - path: nvflare.lighter.impl.template.TemplateBuilder
  - path: nvflare.lighter.impl.static_file.StaticFileBuilder
    args:
      # config_folder can be set to inform NVIDIA FLARE where to get configuration
      config_folder: config

      # scheme for communication driver (currently supporting the default, grpc, only).
      # scheme: grpc

      # app_validator is used to verify if uploaded app has proper structures
      # if not set, no app_validator is included in fed_server.json
      # app_validator: PATH_TO_YOUR_OWN_APP_VALIDATOR

      # when docker_image is set to a docker image name, docker.sh will be generated on server/client/admin
      docker_image: jefftud/nvflare-pt-dev:3dcnn

      # download_job_url is set to http://download.server.com/ as default in fed_server.json.  You can override this
      # to different url.
      # download_job_url: http://download.server.com/

      overseer_agent:
        path: nvflare.ha.dummy_overseer_agent.DummyOverseerAgent
        # if overseer_exists is true, args here are ignored.  Provisioning
        #   tool will fill role, name and other local parameters automatically.
        # if overseer_exists is false, args in this section will be used and the sp_end_point
        # must match the server defined above in the format of SERVER_NAME:FL_PORT:ADMIN_PORT
        #
        overseer_exists: false
        args:
          sp_end_point: dl3.tud.de:8002:8003

  - path: nvflare.lighter.impl.cert.CertBuilder
  - path: nvflare.lighter.impl.signature.SignatureBuilder